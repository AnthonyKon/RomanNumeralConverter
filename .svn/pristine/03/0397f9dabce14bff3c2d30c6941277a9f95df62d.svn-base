/**
 * Computer Programming 2 (COMP2711, COMP8801)
 * Practical 2: Roman Numbers
 */
using namespace std;
#include <iostream>
#include <cctype>
#include <algorithm>

int main(int argc, char *argv[])
{
    int romanValue(char c);
    int romanInt(string& input);

    string roman[] = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"};
    string romanTen[] = {"X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"};
    string romanHundred[] = {"C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"};
    string romanThousand[] = {"M", "MM", "MMM"};

    //loop through thousands first, if found, multiply the index, add to count, move to second number until there is no more input.

    string input;
    while (getline(cin, input)){
        if (input == ""){
            return 0;
        }

        for (int j = 0; j < input.length(); ++j) {
            input[j] = toupper(input[j]);
        }

            /*for (int i = 0; i < sizeof(roman)/sizeof(string); ++i) {

                 if (romanTen[i] == input){
                    cout << (i + 1) * 10 << endl;
                } else if(romanHundred[i] == input){
                    cout << (i + 1) * 100 << endl;
                } else if (roman[i] != input && romanTen[i] != input && romanHundred[i] != input && romanThousand[i] != input){
                    cout << romanInt(input) << endl;
                    break;
                }
            }*/

            cout << romanInt(input) << endl;
        }

    return 0;

}

int romanValue(char c)
{

            if (c == 'I')
                return 1;
            if (c == 'V')
                return 5;
            if (c == 'X')
                return 10;
            if (c == 'L')
                return 50;
            if (c == 'C')
                return 100;
            if (c == 'D')
                return 500;
            if (c == 'M')
                return 1000;
    return 0;

}

int romanInt(string& input)
{
    int count = 0;
    //string check = "IVXLCDM";

    //loop through to get the first value of input - eg. iv = 4, first i = 1
    for (int i = 0; i < input.length(); i++) {
        //assign 1 to first val variable
        int firstVal = romanValue(input[i]);
        //if there is a second character..
        if (i + 1 < input.length()) {
            //the second value is assigned, in this case it is v = 5
            int secondVal = romanValue(input[i + 1]);
            // if first value (1) is greater than or equal to the second value (5)..
            if (firstVal >= secondVal) {
                //the count is equal to the count + count + first value (1)
                count = count + firstVal;
            }
            else {
                //otherwise, if first value(1) is less than the second value (5)
                //the count is equal to the count + the second value (5) - first value (1)
                count = count + secondVal - firstVal;
                i++;
            }
        }
        else {
            count = count + firstVal;
        }
    }
    return count;
}
